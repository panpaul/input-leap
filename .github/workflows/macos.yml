name: Build Tests For MAC

on:
  release:

  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      build_release:
        description: 'Build Release binaries'
        required: false
        type: boolean

# Set the build type here
env:
  B_BUILD_TYPE: ${{ (inputs.build_release || github.event_name == 'release') && 'Release' || 'Debug' }}

jobs:
  mac-build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
       include:
         - os: macos-11
           qt-version: 5.15
           min-macOS-version: 10.9
         - os: macos-12
           qt-version: 6.6
           min-macOS-version: 11
           qt-modules: qt5compat

    env:
      VERBOSE: 1
      TERM: xterm-256color

    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{matrix.qt-version}}
          modules: ${{matrix.qt-modules}}
          cache: true
          cache-key-prefix: macOS-${{matrix.os}}-Qt${{matrix.qt-version}}

      - name: Setup the image
        run: |
          brew install ninja

      - uses: actions/checkout@v4
        with:
          path: input-leap
          submodules: recursive

      - name: Setup the build
        run: |
          cmake -DCMAKE_BUILD_TYPE="${B_BUILD_TYPE}" -S input-leap -B build -G Ninja \
                -DCMAKE_OSX_SYSROOT=$(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \
                -DCMAKE_OSX_DEPLOYMENT_TARGET=${{matrix.min-macOS-version}} -DCMAKE_UNITY_BUILD=1 -DQT_DEFAULT_MAJOR_VERSION=$(echo ${{matrix.qt-version}} | cut -c -1)

      - name: Run the build
        run: |
          cmake --build build --parallel

      - uses: actions/upload-artifact@v4
        if: env.B_BUILD_TYPE == 'Release'
        with:
          name: ${{ matrix.os }}-installer
          path: ./build/bundle/*.dmg
          if-no-files-found: error
